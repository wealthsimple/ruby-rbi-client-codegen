# typed: strong

=begin
{{> api_info}}
=end

module {{moduleName}}
  class ApiError < StandardError
    sig { returns(Integer) }
    def code; end

    sig { returns(T::Hash[T.untyped, T.untyped]) }
    def response_headers; end

    sig { returns(String) }
    def response_body; end

    # Usage examples:
    #   ApiError.new
    #   ApiError.new("message")
    #   ApiError.new(:code => 500, :response_headers => {}, :response_body => "")
    #   ApiError.new(:code => 404, :message => "Not Found")
    sig { params(arg: T.nilable(T.any(String, T::Hash[Symbol, BasicObject]))).void }
    def initialize(arg = nil); end
  end
end
